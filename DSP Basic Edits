DSP Basic Edits
This section covers basic edits such as splicing, consolidating, and time reversal of a signal.

Signal Splicing takes a continuous signal and cuts it into two separate signals.
Example Code:
% imported and displayed the riff in a waveform. This code then displays a Figure with the samples graphed.

>> [y,Fs] = audioread('DstGtr.wav');
>> plot(y)

% Then I chose which sample to splice my signal at. Here I spliced the signal from the beginning 
% all the way up to sample number 243,000 and assigned it to the new variable sig1. 
% I similarly did the same for the remaining signals and assigned them to variable sig2.

>> sig1 = y(1:243000);
>> sig2 = y(243001:end);

% Both of these new splices were plotted and I created two new audio files for sig1 and sig2. 

>> plot(sig1)
>> plot(sig2)
>> audiowrite('sig1.wav',sig1,Fs);
>> audiowrite('sig2.wav',sig2,Fs);

Consolidating Signals takes two separate audio signals and joins them into one using array concatenation.
Example Code: In this code, I recalled the two separate signals I created from splicing an original signal
which in turn I created a new array and assigned it to a new variable. Following that, I also added a 
second of silence in between each signal.

>> [sig1, Fs] = audioread("sig1.wav");
>> [sig2, Fs] = audioread("sig2.wav");
>> plot(sig1);
>> sound(sig1, Fs);
>> plot(sig2);
>> sound(sig2, Fs);
>> sig3 = [ sig1 ; sig2 ];
>> plot(sig3);
>> sound(sig3, Fs);
>> sig4 = [sig1 ; zeros(Fs, 1) ; sig2];
>> plot(sig4);
>> sound(sig4, Fs);
>> 

